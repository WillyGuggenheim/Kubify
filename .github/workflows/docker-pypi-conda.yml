name: Docker PyPi Conda Test Release CICD

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: actions/checkout
      uses: actions/checkout@v2
      with:
          persist-credentials: false
    # conda tests every python isolated and ship package if it works in every python
    - name: Conda deployment of package with Python ${{ matrix.python-version }}
      strategy:
        matrix:
          python-version: [3.7, 3.8, 3.9, 3.10, 3.11, 3.12] # run tests on all supported python versions
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Conda environment creation and activation
          uses: conda-incubator/setup-miniconda@v2
          with:
            python-version: ${{ matrix.python-version }}
            environment-file: environment.yml    # Path to the build conda environment
            auto-update-conda: false
            auto-activate-base: false
            show-channel-urls: true
        - name: Build and upload the conda packages
          uses: uibcdf/action-build-and-upload-conda-packages@v1.1.0
          with:
            meta_yaml_dir: devtools/conda-build
            python-version: ${{ matrix.python-version }}    # Values previously defined in `matrix`
            platform_linux-64: true
            platform_osx-64: true
            platform_win-64: true
            label: auto
            token: ${{ secrets.ANACONDA_TOKEN }}
    # dockers build multi-arch setup
    -
      name: setup-qemu-multiarch-arm-amd
      uses: docker/setup-qemu-action@v2
    -
      name: setup-buildx-multiarch-arm-amd
      uses: docker/setup-buildx-action@v2
    - name: pypi-make-package
      id: makepypipackage
      run: python3 setup.py sdist bdist_wheel
    # dockerhub ship image
    -
      name: login-dockerhub-registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    # docker arm/amd images build security test package
    -
      name: build and test docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        # linux/arm64
        platforms: linux/amd64,linux/aarch64
        push: ${{ github.event_name != 'pull_request' }}
        tags: willy0912/kubify:main
    # pypi ship package
    - name: test and release pypa package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}